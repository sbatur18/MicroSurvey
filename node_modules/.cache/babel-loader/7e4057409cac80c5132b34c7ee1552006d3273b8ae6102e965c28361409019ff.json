{"ast":null,"code":"var _jsxFileName = \"/Users/numan/Desktop/exp/src/Components/ContentCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { StyledAnswer } from './Answer-style';\nimport { StyledButton } from './Button-style';\nimport { StyledProgressButtonHolder } from './ProgressButtonHolder-style';\nimport { StyledInnerCard } from './InnerCard-style';\nimport { StyledContainer } from './Container-style';\nimport { StyledButtonHolder } from './ButtonHolder-style.js';\nimport { saveQuestions } from '../integration.ts';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentCard = _ref => {\n  _s();\n  let {\n    data,\n    numberQuestions,\n    userID,\n    surveyID,\n    restartFunction\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [allRequiredAnswered, setAllRequiredAnswered] = useState(false);\n  const [updated, setUpdated] = useState(0);\n  console.log(data);\n  let valueDict = {};\n  for (let i = 0; i < numberQuestions; i++) {\n    valueDict[i] = \"\";\n  }\n  const formik = useFormik({\n    initialValues: valueDict\n  });\n  useEffect(() => {\n    let bool = false;\n    let answers = formik.values;\n    if (Object.values(answers).length > 0) {\n      bool = true;\n    }\n    for (let i = 0; i < Object.values(answers).length; i++) {\n      if (Object.values(answers)[i] === \"\" && data[i].required) {\n        bool = false;\n      }\n    }\n    setAllRequiredAnswered(bool);\n  }, [formik.values, data, updated]);\n  const handleSubmit = (formik, restartFunction) => {\n    let answers = Object.values(formik.values);\n    for (let i = 0; i < answers.length; i++) {\n      if (typeof answers[i] == \"object\") {\n        answers[i] = answers[i].join(\"\");\n      }\n    }\n    console.log(\"submitted\");\n    saveQuestions(surveyID, userID, answers);\n    surveyID = null;\n    restartFunction(true);\n  };\n  const getButtonsUsingForLoop = numberQuestions => {\n    const array = [];\n    for (var i = 0; i < numberQuestions; i++) {\n      let a = i;\n      array.push( /*#__PURE__*/_jsxDEV(StyledButton, {\n        width: \"auto\",\n        onClick: () => {\n          setCurrentQuestion(a);\n        },\n        children: [\"Q\", i + 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this));\n    }\n    return array;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !surveyID ? /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no incomplete surveys!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"      \", /*#__PURE__*/_jsxDEV(StyledContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInnerCard, {\n          width: \"100%\",\n          maxwidth: \"80px\",\n          height: \"100%\",\n          justify: \"center\",\n          children: getButtonsUsingForLoop(numberQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StyledInnerCard, {\n          height: \"fit-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"question-text\",\n            children: data[currentQuestion].questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledAnswer, {\n            type: data[currentQuestion].questionType,\n            options: data[currentQuestion].selections,\n            qNum: currentQuestion,\n            formik: formik,\n            updated: updated,\n            updater: setUpdated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledProgressButtonHolder, {\n            children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n              right: \"9px\",\n              width: \"80px\",\n              onClick: () => {\n                setCurrentQuestion(Math.max(0, currentQuestion - 1));\n              },\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n              right: \"9px\",\n              width: \"80px\",\n              onClick: () => {\n                setCurrentQuestion(Math.min(numberQuestions - 1, currentQuestion + 1));\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonHolder, {\n        children: allRequiredAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleSubmit(formik, restartFunction);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ContentCard, \"pquvouj7F1B5nWeYILb7ZCictSs=\", false, function () {\n  return [useFormik];\n});\n_c = ContentCard;\nexport default ContentCard;\nvar _c;\n$RefreshReg$(_c, \"ContentCard\");","map":{"version":3,"names":["useState","useEffect","StyledAnswer","StyledButton","StyledProgressButtonHolder","StyledInnerCard","StyledContainer","StyledButtonHolder","saveQuestions","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentCard","_ref","_s","data","numberQuestions","userID","surveyID","restartFunction","currentQuestion","setCurrentQuestion","allRequiredAnswered","setAllRequiredAnswered","updated","setUpdated","console","log","valueDict","i","formik","initialValues","bool","answers","values","Object","length","required","handleSubmit","join","getButtonsUsingForLoop","array","a","push","width","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","maxwidth","height","justify","id","questionTitle","type","questionType","options","selections","qNum","updater","right","Math","max","min","_c","$RefreshReg$"],"sources":["/Users/numan/Desktop/exp/src/Components/ContentCard.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { StyledAnswer } from './Answer-style';\nimport { StyledButton } from './Button-style'\nimport { StyledProgressButtonHolder } from './ProgressButtonHolder-style'\nimport { StyledInnerCard } from './InnerCard-style'\nimport { StyledContainer } from './Container-style'\nimport { StyledButtonHolder } from './ButtonHolder-style.js'\nimport { saveQuestions } from '../integration.ts'\nimport { useFormik } from 'formik';\n\nconst ContentCard = ({data, numberQuestions, userID, surveyID, restartFunction}) => {\n    const [currentQuestion, setCurrentQuestion] = useState(0)\n    const [allRequiredAnswered, setAllRequiredAnswered] = useState(false)\n    const [updated, setUpdated] = useState(0)\n\n    console.log(data)\n    let valueDict = {}\n    for (let i = 0; i<numberQuestions; i++) {\n        valueDict[i] = \"\"\n    }\n\n    const formik = useFormik({\n        initialValues : valueDict,\n    })\n\n    useEffect(() => {\n        let bool = false;\n        let answers = formik.values\n        if (Object.values(answers).length>0) {bool = true;}\n        for (let i = 0; i < Object.values(answers).length; i++) {\n            if ((Object.values(answers)[i] === \"\") && (data[i].required)) {\n                bool = false\n            }\n        }\n\n        setAllRequiredAnswered(bool)\n    }, [formik.values, data, updated])\n\n    const handleSubmit = (formik, restartFunction) => {\n        let answers = Object.values(formik.values)\n        for (let i = 0; i < answers.length; i++) {\n            if (typeof answers[i] == \"object\") {\n                answers[i] = answers[i].join(\"\")\n            }\n        }\n        console.log(\"submitted\")\n        saveQuestions(surveyID, userID, answers)\n        surveyID = null\n        restartFunction(true)\n    }\n\n    const getButtonsUsingForLoop = (numberQuestions) => {\n        const array = []\n        for(var i = 0; i < numberQuestions; i++){\n          let a = i;\n          array.push(\n            <StyledButton width={\"auto\"}\n                onClick={()=>{\n                    setCurrentQuestion(a);\n                }}\n                key={i}\n                >Q{i+1}\n            </StyledButton>)\n        }\n        return array\n    }\n\n    return (\n        <div>\n            {!surveyID ? (\n                <StyledContainer>\n                    <p>You have no incomplete surveys!</p>\n                </StyledContainer>\n            \n            ) : (\n            <>      <StyledContainer>\n                        <StyledInnerCard width={\"100%\"} maxwidth={\"80px\"} height={\"100%\"} justify={\"center\"}>\n                            {getButtonsUsingForLoop(numberQuestions)}\n                        </StyledInnerCard>\n                        <StyledInnerCard height=\"fit-content\">\n                            <h2 id='question-text'>{data[currentQuestion].questionTitle}</h2>\n                            <StyledAnswer type={data[currentQuestion].questionType} options={data[currentQuestion].selections} qNum={currentQuestion} formik = {formik} updated = {updated} updater = {setUpdated}></StyledAnswer>\n                            <StyledProgressButtonHolder>\n                                <StyledButton right={\"9px\"} width={\"80px\"}\n                                    onClick={() => {\n                                        setCurrentQuestion(Math.max(0, currentQuestion - 1));\n                                    } }\n                                >Previous</StyledButton>\n                                <StyledButton right={\"9px\"} width={\"80px\"}\n                                    onClick={() => {\n                                        setCurrentQuestion(Math.min(numberQuestions - 1, currentQuestion + 1));\n                                    } }\n                                >Next</StyledButton>\n                            </StyledProgressButtonHolder>\n                        </StyledInnerCard>\n                    </StyledContainer>\n                    <StyledButtonHolder>\n                        {allRequiredAnswered && \n                            <button onClick={() => {\n                                handleSubmit(formik, restartFunction)\n                            } }>Submit</button>\n                        }  \n                    </StyledButtonHolder>\n            </>\n            )}\n        </div>\n        \n     );\n}\n\nexport default ContentCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}