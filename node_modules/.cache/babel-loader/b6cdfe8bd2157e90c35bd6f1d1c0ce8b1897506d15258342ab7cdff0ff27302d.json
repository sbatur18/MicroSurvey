{"ast":null,"code":"var _jsxFileName = \"/Users/numan/Desktop/exp/src/Components/ContentCard.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { StyledAnswer } from './Answer-style';\nimport { StyledButton } from './Button-style';\nimport { StyledProgressButtonHolder } from './ProgressButtonHolder-style';\nimport { StyledInnerCard } from './InnerCard-style';\nimport { StyledContainer } from './Container-style';\nimport { StyledButtonHolder } from './ButtonHolder-style.js';\nimport { saveQuestions } from '../integration.ts';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentCard = _ref => {\n  _s();\n  let {\n    data,\n    numberQuestions,\n    userID,\n    surveyID\n  } = _ref;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  let valueDict = {};\n  for (let i = 0; i < numberQuestions; i++) {\n    valueDict[i] = \"\";\n  }\n  const formik = useFormik({\n    initialValues: valueDict\n  });\n  const getButtonsUsingForLoop = numberQuestions => {\n    const array = [];\n    for (var i = 0; i < numberQuestions; i++) {\n      let a = i;\n      array.push( /*#__PURE__*/_jsxDEV(StyledButton, {\n        width: \"auto\",\n        onClick: () => {\n          setCurrentQuestion(a);\n        },\n        children: [\"Q\", i + 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this));\n    }\n    return array;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !surveyID ? /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no incomplete surveys!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"      \", /*#__PURE__*/_jsxDEV(StyledContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInnerCard, {\n          width: \"100%\",\n          maxwidth: \"80px\",\n          height: \"100%\",\n          justify: \"center\",\n          children: getButtonsUsingForLoop(numberQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StyledInnerCard, {\n          height: \"fit-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"question-text\",\n            children: data[currentQuestion].questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledAnswer, {\n            type: data[currentQuestion].questionType,\n            options: data[currentQuestion].selections,\n            qNum: currentQuestion,\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledProgressButtonHolder, {\n            children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n              right: \"9px\",\n              width: \"80px\",\n              onClick: () => {\n                setCurrentQuestion(Math.max(0, currentQuestion - 1));\n              },\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n              right: \"9px\",\n              width: \"80px\",\n              onClick: () => {\n                setCurrentQuestion(Math.min(numberQuestions - 1, currentQuestion + 1));\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonHolder, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            let answers = Object.values(formik.values);\n            for (let i = 0; i < answers.length; i++) {\n              if (typeof answers[i] == \"object\") {\n                answers[i] = answers[i].join(\"\");\n              }\n              console.log(typeof answers[i]);\n            }\n            saveQuestions(surveyID, userID, answers);\n            surveyID = null;\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ContentCard, \"2Sbylejx/0m+eZLErbBcgwhyE9g=\", false, function () {\n  return [useFormik];\n});\n_c = ContentCard;\nexport default ContentCard;\nvar _c;\n$RefreshReg$(_c, \"ContentCard\");","map":{"version":3,"names":["useState","StyledAnswer","StyledButton","StyledProgressButtonHolder","StyledInnerCard","StyledContainer","StyledButtonHolder","saveQuestions","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentCard","_ref","_s","data","numberQuestions","userID","surveyID","currentQuestion","setCurrentQuestion","valueDict","i","formik","initialValues","getButtonsUsingForLoop","array","a","push","width","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","maxwidth","height","justify","id","questionTitle","type","questionType","options","selections","qNum","right","Math","max","min","answers","Object","values","length","join","console","log","_c","$RefreshReg$"],"sources":["/Users/numan/Desktop/exp/src/Components/ContentCard.js"],"sourcesContent":["import { useState } from 'react'\nimport { StyledAnswer } from './Answer-style';\nimport { StyledButton } from './Button-style'\nimport { StyledProgressButtonHolder } from './ProgressButtonHolder-style'\nimport { StyledInnerCard } from './InnerCard-style'\nimport { StyledContainer } from './Container-style'\nimport { StyledButtonHolder } from './ButtonHolder-style.js'\nimport { saveQuestions } from '../integration.ts'\nimport { useFormik } from 'formik';\n\nconst ContentCard = ({data, numberQuestions, userID, surveyID}) => {\n    const [currentQuestion, setCurrentQuestion] = useState(0)\n\n    let valueDict = {}\n    for (let i = 0; i<numberQuestions; i++) {\n        valueDict[i] = \"\"\n    }\n\n    const formik = useFormik({\n        initialValues : valueDict,\n    })\n\n    const getButtonsUsingForLoop = (numberQuestions) => {\n        const array = []\n        for(var i = 0; i < numberQuestions; i++){\n          let a = i;\n          array.push(\n            <StyledButton width={\"auto\"}\n                onClick={()=>{\n                    setCurrentQuestion(a);\n                }}\n                key={i}\n                >Q{i+1}\n            </StyledButton>)\n        }\n        return array\n    }\n\n    return (\n        <div>\n            {!surveyID ? (\n                <StyledContainer>\n                    <p>You have no incomplete surveys!</p>\n                </StyledContainer>\n            \n            ) : (\n            <>      <StyledContainer>\n                        <StyledInnerCard width={\"100%\"} maxwidth={\"80px\"} height={\"100%\"} justify={\"center\"}>\n                            {getButtonsUsingForLoop(numberQuestions)}\n                        </StyledInnerCard>\n                        <StyledInnerCard height=\"fit-content\">\n                            <h2 id='question-text'>{data[currentQuestion].questionTitle}</h2>\n                            <StyledAnswer type={data[currentQuestion].questionType} options={data[currentQuestion].selections} qNum={currentQuestion} formik = {formik}></StyledAnswer>\n                            <StyledProgressButtonHolder>\n                                <StyledButton right={\"9px\"} width={\"80px\"}\n                                    onClick={() => {\n                                        setCurrentQuestion(Math.max(0, currentQuestion - 1));\n                                    } }\n                                >Previous</StyledButton>\n                                <StyledButton right={\"9px\"} width={\"80px\"}\n                                    onClick={() => {\n                                        setCurrentQuestion(Math.min(numberQuestions - 1, currentQuestion + 1));\n                                    } }\n                                >Next</StyledButton>\n                            </StyledProgressButtonHolder>\n                        </StyledInnerCard>\n                    </StyledContainer>\n                    <StyledButtonHolder>\n                            <button onClick={() => {\n                                let answers = Object.values(formik.values)\n                                for (let i = 0; i < answers.length; i++) {\n                                    if (typeof answers[i] == \"object\") {\n                                        answers[i] = answers[i].join(\"\")\n                                    }\n                                    console.log(typeof answers[i])\n                                }\n                                saveQuestions(surveyID, userID, answers);\n                                surveyID = null;\n                            } }>Submit</button>\n                    </StyledButtonHolder></>\n            )}\n        </div>\n        \n     );\n}\n\nexport default ContentCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}