{"ast":null,"code":"var _jsxFileName = \"/Users/numan/Desktop/exp/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { StyledMainCard } from './Components/MainCard-style';\nimport { useState, useEffect } from \"react\";\nimport { getQuestions } from './integration.ts';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [userID, setUserID] = useState('0');\n  const [data, setData] = useState(null);\n  const [surveyID, setSurveyId] = useState(null);\n  const [numberQuestions, setNumberQuestions] = useState(0);\n  const [valueDict, setValueDict] = useState(0);\n  const [validationDict, setValidationeDict] = useState(0);\n  const [schema, setSchema] = useState(0);\n  const restartFunction = mood => {\n    setIsLoading(mood);\n  };\n  window.addEventListener('message', function (event) {\n    if (event.data.source === \"survey-parent\") {\n      setUserID(event.data.value);\n      getQuestions(event.data.value).then(dataFetched => {\n        setData(dataFetched.questions);\n        setSurveyId(dataFetched.surveyId);\n        setIsLoading(false);\n        if (dataFetched.questions) {\n          setNumberQuestions(dataFetched.questions.length);\n        } else {\n          setNumberQuestions(0);\n        }\n      });\n    }\n  }, false);\n  useEffect(() => {\n    var valueDict = {};\n    for (let i = 0; i < numberQuestions; i++) {\n      valueDict[i] = \"\";\n    }\n    setValueDict(valueDict);\n    var schema = {};\n    for (let i = 0; i < numberQuestions; i++) {\n      schema[i] = validationDict[data[i].questionType];\n    }\n  }, [numberQuestions]);\n  const formik = useFormik({\n    initialValues: valueDict,\n    validationSchema: Yup.object().shape(schema)\n  }, [valueDict, schema]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(StyledMainCard, {\n        isLoading: isLoading,\n        data: data,\n        numberQuestions: numberQuestions,\n        userID: userID,\n        surveyID: surveyID,\n        restartFunction: restartFunction,\n        formik: formik\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"VSt7felqoQ2fV4PSiFw8m1OIaUA=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["StyledMainCard","useState","useEffect","getQuestions","Yup","useFormik","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","userID","setUserID","data","setData","surveyID","setSurveyId","numberQuestions","setNumberQuestions","valueDict","setValueDict","validationDict","setValidationeDict","schema","setSchema","restartFunction","mood","window","addEventListener","event","source","value","then","dataFetched","questions","surveyId","length","i","questionType","formik","initialValues","validationSchema","object","shape","action","onSubmit","handleSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/numan/Desktop/exp/src/App.js"],"sourcesContent":["import './App.css';\nimport { StyledMainCard } from './Components/MainCard-style';\nimport { useState, useEffect } from \"react\";\nimport { getQuestions } from './integration.ts';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true)\n  const [userID, setUserID] = useState('0')\n  const [data, setData] = useState(null)\n  const [surveyID, setSurveyId] = useState(null)\n  const [numberQuestions, setNumberQuestions] = useState(0)\n  const [valueDict, setValueDict] = useState(0)\n  const [validationDict, setValidationeDict] = useState(0)\n  const [schema, setSchema] = useState(0)\n  \n\n  const restartFunction = (mood) => {\n    setIsLoading(mood)\n  }\n\n  window.addEventListener('message', function(event) {\n    if (event.data.source === \"survey-parent\" ) {\n      setUserID(event.data.value)\n      getQuestions(event.data.value)\n      .then(dataFetched => {\n        setData(dataFetched.questions)\n        setSurveyId(dataFetched.surveyId)\n        setIsLoading(false)\n        if (dataFetched.questions) {\n          setNumberQuestions(dataFetched.questions.length)\n        } else {\n          setNumberQuestions(0)\n        }\n      })\n    }\n  }, false);\n\n   useEffect(() => {\n    var valueDict = {}\n    for (let i = 0; i<numberQuestions; i++) {\n        valueDict[i] = \"\"\n    }\n    setValueDict(valueDict)\n    var schema = {}\n    for (let i = 0; i < numberQuestions; i++) {\n        schema[i] = validationDict[data[i].questionType]\n    }\n  }, [numberQuestions]) \n\n  const formik = useFormik({\n    initialValues : valueDict,\n    validationSchema : Yup.object().shape(schema),\n  }, [valueDict, schema])\n\n\n  return (\n      <form action=\"\" onSubmit={formik.handleSubmit}>\n        <div className='main-div'>\n          {<StyledMainCard isLoading={isLoading} data={data} numberQuestions={numberQuestions} userID={userID} surveyID={surveyID} restartFunction={restartFunction} formik = {formik}></StyledMainCard>}\n        </div>\n      </form>\n      \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}