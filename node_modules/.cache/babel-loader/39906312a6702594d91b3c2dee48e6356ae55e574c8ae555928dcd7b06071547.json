{"ast":null,"code":"var _jsxFileName = \"/Users/numan/Desktop/exp/src/Components/Answer.js\";\nimport { StyledMultipleAnswer } from \"./MultipleOptions-style\";\nimport { StyledShortAnswer } from \"./ShortText-style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Answer = _ref => {\n  let {\n    className,\n    type,\n    options,\n    qNum,\n    formik\n  } = _ref;\n  const getDropdownOptions = num => {\n    const array = [];\n    for (var i = 0; i < num; i++) {\n      let a = i;\n      array.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        children: options[a]\n      }, a, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this));\n    }\n    return array;\n  };\n  const getMultipleOptions = num => {\n    let optionsArray = null;\n    if (formik.values[qNum] === \"\") {\n      optionsArray = new Array(num).fill(\"0\");\n    } else {\n      optionsArray = formik.values[qNum];\n    }\n    const array = [];\n    array.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select one option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, \"-1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this));\n    for (var i = 0; i < num; i++) {\n      let a = i;\n      array.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            if (event.target.checked) {\n              optionsArray[a] = \"1\";\n            } else {\n              optionsArray[a] = \"0\";\n            }\n            formik.values[qNum] = optionsArray;\n          },\n          type: \"checkbox\",\n          id: a,\n          defaultChecked: optionsArray[a] === \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: options[a]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, a, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this));\n    }\n    return array;\n  };\n  const findCorrectArea = type => {\n    if (type === \"LONG_ANSWER\") {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"\",\n        id: qNum,\n        cols: \"30\",\n        rows: \"10\",\n        onChange: formik.handleChange,\n        value: formik.values[qNum]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"SINGLE_SELECTION\") {\n      const numberOptions = Object.keys(options).length;\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: qNum,\n        onChange: formik.handleChange,\n        value: formik.values[qNum],\n        children: getDropdownOptions(numberOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"SHORT_ANSWER\") {\n      return /*#__PURE__*/_jsxDEV(StyledShortAnswer, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: formik.handleChange,\n          id: qNum,\n          value: formik.values[qNum]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"MULTIPLE_SELECTION\") {\n      const numberOptions = Object.keys(options).length;\n      return /*#__PURE__*/_jsxDEV(StyledMultipleAnswer, {\n        children: getMultipleOptions(numberOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: findCorrectArea(type)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_c = Answer;\nexport default Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["StyledMultipleAnswer","StyledShortAnswer","jsxDEV","_jsxDEV","Answer","_ref","className","type","options","qNum","formik","getDropdownOptions","num","array","i","a","push","children","fileName","_jsxFileName","lineNumber","columnNumber","getMultipleOptions","optionsArray","values","Array","fill","onChange","event","target","checked","id","defaultChecked","findCorrectArea","name","cols","rows","handleChange","value","numberOptions","Object","keys","length","_c","$RefreshReg$"],"sources":["/Users/numan/Desktop/exp/src/Components/Answer.js"],"sourcesContent":["import { StyledMultipleAnswer } from \"./MultipleOptions-style\";\nimport { StyledShortAnswer } from \"./ShortText-style\";\n\nconst Answer = ( {className, type, options, qNum, formik} ) => {\n\n    const getDropdownOptions = (num) => {\n        const array = []\n        for(var i = 0; i < num; i++){\n          let a = i;\n          array.push(\n            <option key={a}>{options[a]}</option>)\n        }\n        return array\n    }\n\n    const getMultipleOptions = (num) => {\n        let optionsArray = null\n        if (formik.values[qNum] === \"\") {optionsArray= new Array(num).fill(\"0\");\n        } elseÂ {optionsArray = formik.values[qNum]}\n        const array = []\n        array.push(\n            <div key=\"-1\">\n                <p>Select one option</p>\n            </div>\n        )\n        for(var i = 0; i < num; i++){\n          let a = i;\n          array.push(<div key={a}>\n                <input onChange={\n                            (event) => {\n                                    if (event.target.checked) {\n                                    optionsArray[a] = \"1\"\n                                    } else {\n                                    optionsArray[a] = \"0\"\n                                    }\n                                    formik.values[qNum] = optionsArray\n                            }\n                        }\n                        type=\"checkbox\"\n                        id={a}\n                        defaultChecked={(optionsArray[a]===\"1\")}\n                />\n                    <p>{options[a]}</p>\n                </div>\n          )\n        }\n        return array\n    }\n\n    const findCorrectArea = (type) => {\n        if (type === \"LONG_ANSWER\") {\n            return <textarea \n                        name=\"\" \n                        id={qNum} \n                        cols=\"30\" rows=\"10\" \n                        onChange={formik.handleChange} \n                        value={formik.values[qNum]}>\n                    </textarea>\n        } else if (type === \"SINGLE_SELECTION\") {\n            const numberOptions = Object.keys(options).length\n            return <select \n                        name=\"\" \n                        id={qNum} \n                        onChange={formik.handleChange}\n                        value={formik.values[qNum]}\n                    >\n                {getDropdownOptions(numberOptions)}\n            </select>\n        } else if (type === \"SHORT_ANSWER\") {\n            return <StyledShortAnswer>\n                        <input type=\"text\" \n                            onChange={formik.handleChange}\n                            id = {qNum} \n                            value={formik.values[qNum]}  \n                        ></input>\n                    </StyledShortAnswer>\n        } else if (type === \"MULTIPLE_SELECTION\") {\n            const numberOptions = Object.keys(options).length\n            return <StyledMultipleAnswer>\n                {getMultipleOptions(numberOptions)}\n            </StyledMultipleAnswer>\n        }\n    }\n\n    return ( \n        <div className={className}>\n            {findCorrectArea(type)}\n        </div>\n     );\n}\n \nexport default Answer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}